# Defines the number of worker processes.
worker_processes 1;

events {
  # worker_processes and worker_connections allows you to calculate maxclients value:
  # max_clients = worker_processes * worker_connections
  worker_connections 1024;
}

http {
  # Include default MIME types
  include mime.types;

  # Sets the default MIME type for files that doesn't have one
  default_type application/octet-stream;

  # By default, NGINX handles file transmission itself and copies the file into the buffer before sending it.
  # Enabling the sendfile directive eliminates the step of copying the data into the buffer and enables direct copying
  # data from one file descriptor to another.
  sendfile on;

  # Timeout during which a keep-alive client connection will stay open.
  keepalive_timeout 65;

  # A server block is a subset of Nginxâ€™s configuration that defines a
  # virtual server used to handle requests of a defined type.

  # Deny all requests to top domain
  server {
    listen 80;
    listen [::]:80;
    server_name ~^(prod|preprod)\.silex\.artfx\.fr$;
    deny all;
  }

  # Silex docs
  server {
    listen 80;
    listen [::]:80;
    server_name ~^docs\.(prod|preprod)\.silex\.artfx\.fr$;
    resolver 127.0.0.11 valid=3s;

    location / {
      set $upstream http://silex-doc:80;
      proxy_pass $upstream;
      proxy_redirect off;
    }
  }

  # Silex front
  server {
    listen 80;
    listen [::]:80;
    server_name ~^front\.(prod|preprod)\.silex\.artfx\.fr$;
    resolver 127.0.0.11 valid=3s;

    location / {
      set $upstream http://silex-front:80;
      proxy_pass $upstream;
      proxy_redirect off;
    }
  }
  # pgadmin
  server{
    listen 80;
    listen [::]:80;
    server_name ~^pgadmin\.(prod|preprod)\.silex\.artfx\.fr$;
    resolver 127.0.0.11 valid=3s;

    location /{
      set $upstream http://silex-pgadmin:80;
      proxy_pass $upstream;
      proxy_redirect off;
    }

  }

  # Kitsu and Zou API
  server {
    listen 80;
    listen [::]:80;
    server_name ~^kitsu\.(prod|preprod)\.silex\.artfx\.fr$;
    resolver 127.0.0.11 valid=3s;

    location /api {
      # Identifies the client's IP address.
      # For the Load Balancing service, the "client" is the last remote peer.
      proxy_set_header X-Real-IP $remote_addr;

      # Sets the "Host" header to the $host variable,
      # which should contain information about the original host being requested.
      proxy_set_header Host $host;

      # Include cors headers
      include /etc/nginx/includes/cors_headers.conf;

      # Sets the maximum allowed size of the client request body.
      # If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client.
      client_max_body_size 1G;

      # The proxy_pass directive is mainly found in location contexts,
      # and it sets the protocol and address of a proxied server.
      # When a request matches a location with a proxy_pass directive inside,
      # the request is forwarded to the URL given by the directive.
      proxy_pass http://zou-app:5000/;
    }

    location /socket.io {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://zou-event:5001;
    }

    location / {
      set $upstream http://kitsu:80;
      proxy_pass $upstream;
      proxy_redirect off;
    }

    # Redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }


  # # Silex Events
  # server {
  #   listen 80;
  #   listen [::]:80;
  #   server_name ~^events\.(prod|preprod)\.silex\.artfx\.fr$;
  #   resolver 127.0.0.11 valid=3s;

  #   location / {
  #     set $upstream http://silex-events:15672;
  #     proxy_pass $upstream;
  #     proxy_redirect off;
  #   }
  # }
}
