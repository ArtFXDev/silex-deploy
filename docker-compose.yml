version: '3.5'

x-base:
  &base
  restart: always
  networks:
    - internal

x-cgwire:
  &cgwire-base
  env_file:
    - ./env/cgwire

x-pgadmin: 
  &pgadmin-base
  env_file:
    - ./env/pgadmin

x-rabbitmq:
  &rabbitmq-base
  env_file:
   - ./env/rabbitmq

x-zou-volumes:
  &zou-volumes
  volumes:
    - zou-previews:/opt/zou/previews
    - zou-tmp:/tmp/zou

services:
  # SILEX ---------------------------------------------------------------------
  docs:
    <<: *base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-docs
    image: ghcr.io/artfxdev/silex-doc:latest
    ports:
      - '80'
    hostname: silex-doc

  front:
    <<: *base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-front
    image: local-front
    build:
        context: ../silex-front
    ports:
        - '80'
    hostname: silex-front


  # CGWIRE ---------------------------------------------------------------------
  zou-db:
    <<: *base
    <<: *cgwire-base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-zou-db-${DB_VERSION:-12}
    image: postgres:${DB_VERSION:-12}-alpine
    hostname: zou-db
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - zou-db:/var/lib/postgresql/data
      - ./postgres/pg_ctl.conf:/etc/postgresql/${DB_VERSION:-12}/main/pg_ctl.conf:ro
    ports:
      - 5432:5432
    expose:
      - 5432

  zou-app:
    <<: *base
    <<: *cgwire-base
    <<: *zou-volumes
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-zou-app
    #build: ../zou
    image: ghcr.io/artfxdev/zou:latest
    hostname: zou-app
    depends_on:
      - zou-db
    ports:
      - '5000'
    command: "gunicorn --error-logfile - --access-logfile - -w 3 -k gevent -b :5000 zou.app:app"

  zou-event:
    <<: *base
    <<: *cgwire-base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-zou-event
    #build: ../zou
    image: ghcr.io/artfxdev/zou:latest
    depends_on:
      - zou-redis
    ports:
      - '5001'
    command: "gunicorn --error-logfile - --access-logfile - -w 1 -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -b :5001 zou.event_stream:app"
    hostname: zou-event

  zou-jobs:
    <<: *base
    <<: *cgwire-base
    <<: *zou-volumes
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-zou-jobs
    #build: ../zou
    image: ghcr.io/artfxdev/zou:latest
    command: "rq worker -c zou.job_settings"

  zou-redis:
    <<: *base
    <<: *cgwire-base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-zou-redis
    image: redis:alpine
    volumes:
      - 'zou-redis:/data'

  kitsu:
    <<: *base
    <<: *cgwire-base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-kitsu
    image: ghcr.io/artfxdev/kitsu:latest
    ports:
      - '80'
    hostname: kitsu
    depends_on:
      - zou-app
      - zou-event
      - zou-jobs
  # PGADMIN ----------------------------------------------------------------------------

  pgadmin:
    <<: *base
    <<: *pgadmin-base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
  
  


  nginx:
    <<: *base
    container_name: ${COMPOSE_PROJECT_NAME:-silex}-nginx
    build:
      context: ./nginx
    depends_on:
      # - docs
      - zou-app
    ports:
      - '${PORT:-80}:80'

networks:
  internal:
    name: ${COMPOSE_PROJECT_NAME:-silex}-internal
    driver: bridge

volumes:
  zou-db:
    name: ${COMPOSE_PROJECT_NAME:-silex}-zou-db
  zou-redis:
    name: ${COMPOSE_PROJECT_NAME:-silex}-zou-redis
  zou-previews:
    name: ${COMPOSE_PROJECT_NAME:-silex}-zou-previews
  zou-tmp:
    name: ${COMPOSE_PROJECT_NAME:-silex}-zou-tmp
